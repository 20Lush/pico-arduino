// -------------------------------------------------- //
// This file is autogenerated by pioasm; do not edit! //
// -------------------------------------------------- //

#if !PICO_NO_HARDWARE
#include "hardware/pio.h"
#endif

// -------------- //
// pio_i2s_master //
// -------------- //

#define pio_i2s_master_wrap_target 0
#define pio_i2s_master_wrap 13

static const uint16_t pio_i2s_master_program_instructions[] = {
            //     .wrap_target
    0xe020, //  0: set    x, 0                       
    0x8080, //  1: pull   noblock                    
    0xe000, //  2: set    pins, 0                    
    0xe050, //  3: set    y, 16                      
    0xb142, //  4: nop                    side 0 [1] 
    0x6101, //  5: out    pins, 1                [1] 
    0xb942, //  6: nop                    side 1 [1] 
    0x0084, //  7: jmp    y--, 4                     
    0xe001, //  8: set    pins, 1                    
    0xe050, //  9: set    y, 16                      
    0xb142, // 10: nop                    side 0 [1] 
    0x6101, // 11: out    pins, 1                [1] 
    0xb942, // 12: nop                    side 1 [1] 
    0x008a, // 13: jmp    y--, 10                    
            //     .wrap
};

#if !PICO_NO_HARDWARE
static const struct pio_program pio_i2s_master_program = {
    .instructions = pio_i2s_master_program_instructions,
    .length = 14,
    .origin = -1,
};

static inline pio_sm_config pio_i2s_master_program_get_default_config(uint offset) {
    pio_sm_config c = pio_get_default_sm_config();
    sm_config_set_wrap(&c, offset + pio_i2s_master_wrap_target, offset + pio_i2s_master_wrap);
    sm_config_set_sideset(&c, 2, true, false);
    return c;
}
#endif

